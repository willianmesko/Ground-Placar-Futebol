{"ast":null,"code":"import _slicedToArray from \"/Users/willianmesko/Documents/ground/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/willianmesko/Documents/ground/frontend/src/pages/TimeInformacoes/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router';\nimport api from \"../../services/api\";\nimport TimeInfoBox from '../../components/TimeInfoBox';\nimport PlacarBox from '../../components/PlacarBox';\nimport LoadingBoxPlacar from '../../components/loadingBox/placarBox';\nimport LoadingBoxTime from '../../components/loadingBox/timeBox';\nexport default function TimeInformacoes() {\n  const _useParams = useParams(),\n        timeId = _useParams.timeId;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        timeInfo = _useState2[0],\n        setTimeInfo = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        placarTime = _useState4[0],\n        setPlacarTime = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  useEffect(() => {\n    async function loadTimeInformacao() {\n      const result = await api.get(`timeinfo/${timeId}`);\n      setTimeInfo(result.data.timeInfo);\n      setPlacarTime(result.data.placarTime);\n      setLoading(false);\n    }\n\n    loadTimeInformacao();\n  }, [timeId]);\n  return React.createElement(React.Fragment, null, !loading ? React.createElement(TimeInfoBox, {\n    time: timeInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : React.createElement(LoadingBoxTime, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), !loading ? placarTime.map(placar => React.createElement(PlacarBox, {\n    time: placar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })) : React.createElement(LoadingBoxPlacar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/willianmesko/Documents/ground/frontend/src/pages/TimeInformacoes/index.js"],"names":["React","useState","useEffect","useParams","api","TimeInfoBox","PlacarBox","LoadingBoxPlacar","LoadingBoxTime","TimeInformacoes","timeId","timeInfo","setTimeInfo","placarTime","setPlacarTime","loading","setLoading","loadTimeInformacao","result","get","data","map","placar"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA,qBACrBN,SAAS,EADY;AAAA,QAC/BO,MAD+B,cAC/BA,MAD+B;;AAAA,oBAENT,QAAQ,CAAC,EAAD,CAFF;AAAA;AAAA,QAE/BU,QAF+B;AAAA,QAErBC,WAFqB;;AAAA,qBAGFX,QAAQ,CAAC,EAAD,CAHN;AAAA;AAAA,QAG/BY,UAH+B;AAAA,QAGnBC,aAHmB;;AAAA,qBAIRb,QAAQ,CAAC,IAAD,CAJA;AAAA;AAAA,QAI/Bc,OAJ+B;AAAA,QAItBC,UAJsB;;AAKtCd,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAee,kBAAf,GAAoC;AAChC,YAAMC,MAAM,GAAG,MAAMd,GAAG,CAACe,GAAJ,CAAS,YAAWT,MAAO,EAA3B,CAArB;AACAE,MAAAA,WAAW,CAACM,MAAM,CAACE,IAAP,CAAYT,QAAb,CAAX;AACAG,MAAAA,aAAa,CAACI,MAAM,CAACE,IAAP,CAAYP,UAAb,CAAb;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AAID;;AACDC,IAAAA,kBAAkB;AAEvB,GAZQ,EAYN,CAACP,MAAD,CAZM,CAAT;AAcF,SACC,0CACC,CAACK,OAAD,GAEC,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEJ,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,GAID,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,EAQC,CAACI,OAAD,GAEIF,UAAU,CAACQ,GAAX,CAAeC,MAAM,IAAI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CAFJ,GAII,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZL,CADD;AAiBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {useParams} from 'react-router';\r\nimport api from \"../../services/api\";\r\nimport TimeInfoBox from '../../components/TimeInfoBox';\r\nimport PlacarBox from '../../components/PlacarBox';\r\nimport LoadingBoxPlacar from '../../components/loadingBox/placarBox';\r\nimport LoadingBoxTime from '../../components/loadingBox/timeBox';\r\n\r\nexport default function TimeInformacoes() {\r\n    const {timeId} = useParams();\r\n    const [timeInfo, setTimeInfo] = useState([]);\r\n    const [placarTime, setPlacarTime] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        async function loadTimeInformacao() {\r\n            const result = await api.get(`timeinfo/${timeId}`);\r\n            setTimeInfo(result.data.timeInfo);\r\n            setPlacarTime(result.data.placarTime);\r\n            setLoading(false);\r\n            \r\n            \r\n\r\n          }\r\n          loadTimeInformacao();\r\n      \r\n    }, [timeId])\r\n    \r\n  return (\r\n   <>\r\n   {!loading ? (\r\n     \r\n     <TimeInfoBox time={timeInfo} />\r\n   ) :\r\n   <LoadingBoxTime />\r\n   }\r\n   \r\n   {!loading ? (\r\n     \r\n        placarTime.map(placar => <PlacarBox time={placar}/>)\r\n      ) :\r\n        <LoadingBoxPlacar/>\r\n      }\r\n   </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}